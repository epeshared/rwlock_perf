#include <stdio.h>
#include <stdlib.h>
#include <pthread.h>
#include <time.h>

#define NUM_THREADS 100
#define TEST_COUNTS 1000000

pthread_mutex_t mutex;

void *test_thread(void *arg) {
  int i;
  for (i = 0; i < TEST_COUNTS; i++) {
    pthread_mutex_lock(&mutex);
    int j;
    for (j = 0; j < 10000; j++);
    pthread_mutex_unlock(&mutex);
  }
  return NULL;
}

int main() {
  pthread_t threads[NUM_THREADS];
  int i;
  clock_t start, end;

  pthread_mutex_init(&mutex, NULL);

  start = clock();
  for (i = 0; i < NUM_THREADS; i++) {
    pthread_create(&threads[i], NULL, test_thread, NULL); 
  }

  for (i = 0; i < NUM_THREADS; i++) {
    pthread_join(threads[i], NULL);
  }
  end = clock();

  double time_taken = ((double) (end - start)) / CLOCKS_PER_SEC;
  printf("mutex lock/unlock over %d threads took %f seconds\n", NUM_THREADS, time_taken);

  pthread_mutex_destroy(&mutex);

  return 0;
}
